{"version":3,"sources":["components/Header.js","components/Card.js","App.js","index.js"],"names":["Header","props","console","log","react_default","a","createElement","className","score","id","highscore","Card","onClick","cardClick","src","image","alt","App","state","cards","gameOver","_this","setState","this","forEach","card","count","length","alert","concat","shuffleCards","find","e","i","correctText","array","j","Math","floor","random","_ref","div","document","getElementById","style","opacity","setTimeout","_this2","components_Header","map","components_Card","key","React","Component","ReactDOM","render","src_App_0"],"mappings":"0jCAgBeA,MAXf,SAAgBC,GAEd,OADAC,QAAQC,IAAIF,GAEVG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,UAA+BN,EAAMO,OACrCJ,EAAAC,EAAAC,cAAA,OAAKG,GAAG,YAAR,YACAL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,eAAyCN,EAAMS,aCFtCC,SANF,SAAAV,GAAK,OACdG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOK,QAAS,WAAQX,EAAMY,UAAUZ,EAAMQ,MAC3DL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaO,IAAKb,EAAMc,MAAOC,IAAI,mBC+FzCC,oNA7FbC,MAAQ,CACNC,QACAX,MAAO,EACPE,UAAW,KAGbU,SAAW,WAkBT,OAhBIC,EAAKH,MAAMV,MAAQa,EAAKH,MAAMR,WAChCW,EAAKC,SAAS,CAAEZ,UAAWW,EAAKH,MAAMV,OAAS,WAC7CN,QAAQC,IAAI,kBAAmBoB,KAAKL,MAAMR,aAI9CW,EAAKH,MAAMC,MAAMK,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAGfL,EAAKH,MAAMV,QAAUW,EAAMQ,OAASC,MAAK,2BAAAC,OAA4BR,EAAKH,MAAMV,MAAvC,MAAmDoB,MAAK,4BAAAC,OAA6BR,EAAKH,MAAMV,MAAxC,wBAGjGa,EAAKC,SAAS,CAAEd,MAAO,IAEvBa,EAAKS,aAAaT,EAAKH,MAAMC,QACtB,KAGTN,UAAY,SAAAJ,GAEVY,EAAKH,MAAMC,MAAMY,KAAK,SAACC,EAAGC,GAExB,GAAID,EAAEvB,KAAOA,EAAI,CAEf,GAAuB,IAAnBU,EAAMc,GAAGP,MAaX,OAXAP,EAAMc,GAAGP,MAAQP,EAAMc,GAAGP,MAAQ,EAClCL,EAAKC,SAAS,CAAEd,MAAOa,EAAKH,MAAMV,MAAQ,GAAI,WAC5CN,QAAQC,IAAIoB,KAAKL,MAAMV,OACvBe,KAAKW,cACDX,KAAKL,MAAMV,QAAUW,EAAMQ,QAE7BJ,KAAKH,aAITC,EAAKS,aAAaT,EAAKH,MAAMC,QACtB,EAGPE,EAAKD,iBAObU,aAAe,SAAAK,GACb,IAAK,IAAIF,EAAIE,EAAMR,OAAS,EAAGM,EAAI,EAAGA,IAAK,CACvC,IAAMG,EAAIC,KAAKC,MAAMD,KAAKE,UAAYN,EAAI,IADHO,EAEhB,CAACL,EAAMC,GAAID,EAAMF,IAAvCE,EAAMF,GAFgCO,EAAA,GAE5BL,EAAMC,GAFsBI,EAAA,GAI3C,OAAOL,KAITD,YAAc,WACZ,IAAMO,EAAMC,SAASC,eAAe,YACpCzC,QAAQC,IAAI,QAASsC,GACrBA,EAAIG,MAAMC,QAAU,EACpBC,WAAW,WACTL,EAAIG,MAAMC,QAAU,GACnB,8EAGI,IAAAE,EAAAxB,KACP,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC0C,EAAD,CAAQxC,MAAOe,KAAKL,MAAMV,MAAOE,UAAWa,KAAKL,MAAMR,YACvDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZgB,KAAKL,MAAMC,MAAM8B,IAAI,SAAAxB,GAAI,OACpBrB,EAAAC,EAAAC,cAAC4C,EAAD,CACErC,UAAWkC,EAAKlC,UAChBsC,IAAK1B,EAAKhB,GACVA,GAAIgB,EAAKhB,GACTM,MAAOU,EAAKV,mBArFZqC,IAAMC,kBCDxBC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASd,SAASC,eAAe","file":"static/js/main.ce2f18d0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./css/Header.css\";\n\n// By importing the Header.css file, it is added to the DOM whenever this component loads\n\nfunction Header(props) {\n  console.log(props)\n  return (\n    <div className=\"score-bar\">\n      <div className=\"score\">Score: {props.score}</div>\n      <div id=\"win-lose\">Correct!</div>\n      <div className=\"high-score\">High Score: {props.highscore}</div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./css/Card.css\"\n\nconst Card = props => (\n    <div className=\"card\" onClick={() => { props.cardClick(props.id) }}>\n      <img className=\"card-image\" src={props.image} alt=\"tile\"/>\n    </div>\n);\n\nexport default Card;\n","import React from \"react\"\nimport Header from \"./components/Header\"\nimport Card from \"./components/Card\"\nimport cards from \"./components/cards.json\"\nimport \"./App.css\"\n\nclass App extends React.Component {\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    // if current score is greater than highscore, update high score\n    if (this.state.score > this.state.highscore) {\n      this.setState({ highscore: this.state.score }, function() {\n        console.log(\"New Highscore: \", this.state.highscore);\n      });\n    }\n    // reset card counter\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    // replace with modal\n    this.state.score === cards.length ? alert(`You Win with a score of ${this.state.score}!`) : alert(`You lost. Your score was ${this.state.score}. Please try again.`)\n    // console.log(\"Game Over. Your score: \", this.state.score);\n    // reset state for score\n    this.setState({ score: 0 });\n    // shuffle cards for new game\n    this.shuffleCards(this.state.cards);\n    return true;\n  }\n\n  cardClick = id => {\n    // eslint-disable-next-line\n    this.state.cards.find((e, i) => {\n      // if the clicked element's id matches an id for a card\n      if (e.id === id) {\n        // if the clicked card's counter is zero\n        if (cards[i].count === 0) {\n          // set clicked card as counted\n          cards[i].count = cards[i].count + 1;\n          this.setState({ score: this.state.score + 1}, function() {\n            console.log(this.state.score)\n            this.correctText()\n            if (this.state.score === cards.length) {\n              // console.log(\"You win!\")\n              this.gameOver();\n            }\n          });\n          // shuffle cards after a guess\n          this.shuffleCards(this.state.cards);\n          return true;\n          // else, we've clicked it before, and it's a game over\n        } else {\n          this.gameOver();\n        }\n      };\n    });\n  };\n\n  // randomizer\n  shuffleCards = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  // tell the user they clicked correctly\n  correctText = () => {\n    const div = document.getElementById(\"win-lose\");\n    console.log(\"div: \", div)\n    div.style.opacity = 1;\n    setTimeout(function() {\n      div.style.opacity = 0;\n    }, 750)\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Header score={this.state.score} highscore={this.state.highscore}/>\n        <div className=\"card-container\">\n          {this.state.cards.map(card => (\n                <Card \n                  cardClick={this.cardClick}\n                  key={card.id}\n                  id={card.id}\n                  image={card.image}\n                />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}