{"version":3,"sources":["components/Header.js","components/Card.js","App.js","index.js"],"names":["Header","props","className","score","id","highscore","Card","onClick","cardClick","src","image","alt","App","state","cards","gameOver","setState","console","log","this","forEach","card","count","length","alert","shuffleCards","find","e","i","correctText","array","j","Math","floor","random","div","document","getElementById","style","opacity","setTimeout","map","key","React","Component","ReactDOM","render"],"mappings":"mrCAgBeA,MAXf,SAAgBC,GAEd,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,SAAf,UAA+BD,EAAME,OACrC,yBAAKC,GAAG,YAAR,YACA,yBAAKF,UAAU,cAAf,eAAyCD,EAAMI,aCFtCC,G,MANF,SAAAL,GAAK,OACd,yBAAKC,UAAU,OAAOK,QAAS,WAAQN,EAAMO,UAAUP,EAAMG,MAC3D,yBAAKF,UAAU,aAAaO,IAAKR,EAAMS,MAAOC,IAAI,Y,OC+FzCC,G,iNA7FbC,MAAQ,CACNC,QACAX,MAAO,EACPE,UAAW,G,EAGbU,SAAW,WAkBT,OAhBI,EAAKF,MAAMV,MAAQ,EAAKU,MAAMR,WAChC,EAAKW,SAAS,CAAEX,UAAW,EAAKQ,MAAMV,QAAS,WAC7Cc,QAAQC,IAAI,kBAAmBC,KAAKN,MAAMR,cAI9C,EAAKQ,MAAMC,MAAMM,SAAQ,SAAAC,GACvBA,EAAKC,MAAQ,KAGf,EAAKT,MAAMV,QAAUW,EAAMS,OAASC,MAAM,2BAAD,OAA4B,EAAKX,MAAMV,MAAvC,MAAmDqB,MAAM,4BAAD,OAA6B,EAAKX,MAAMV,MAAxC,wBAGjG,EAAKa,SAAS,CAAEb,MAAO,IAEvB,EAAKsB,aAAa,EAAKZ,MAAMC,QACtB,G,EAGTN,UAAY,SAAAJ,GAEV,EAAKS,MAAMC,MAAMY,MAAK,SAACC,EAAGC,GAExB,GAAID,EAAEvB,KAAOA,EAAI,CAEf,GAAuB,IAAnBU,EAAMc,GAAGN,MAaX,OAXAR,EAAMc,GAAGN,MAAQR,EAAMc,GAAGN,MAAQ,EAClC,EAAKN,SAAS,CAAEb,MAAO,EAAKU,MAAMV,MAAQ,IAAI,WAC5Cc,QAAQC,IAAIC,KAAKN,MAAMV,OACvBgB,KAAKU,cACDV,KAAKN,MAAMV,QAAUW,EAAMS,QAE7BJ,KAAKJ,cAIT,EAAKU,aAAa,EAAKZ,MAAMC,QACtB,EAGP,EAAKC,gB,EAObU,aAAe,SAAAK,GACb,IAAK,IAAIF,EAAIE,EAAMP,OAAS,EAAGK,EAAI,EAAGA,IAAK,CACvC,IAAMG,EAAIC,KAAKC,MAAMD,KAAKE,UAAYN,EAAI,IADH,EAEhB,CAACE,EAAMC,GAAID,EAAMF,IAAvCE,EAAMF,GAFgC,KAE5BE,EAAMC,GAFsB,KAI3C,OAAOD,G,EAITD,YAAc,WACZ,IAAMM,EAAMC,SAASC,eAAe,YACpCF,EAAIG,MAAMC,QAAU,EACpBC,YAAW,WACTL,EAAIG,MAAMC,QAAU,IACnB,M,wEAGK,IAAD,OACP,OACE,yBAAKrC,UAAU,WACb,kBAAC,EAAD,CAAQC,MAAOgB,KAAKN,MAAMV,MAAOE,UAAWc,KAAKN,MAAMR,YACvD,yBAAKH,UAAU,kBACZiB,KAAKN,MAAMC,MAAM2B,KAAI,SAAApB,GAAI,OACpB,kBAAC,EAAD,CACEb,UAAW,EAAKA,UAChBkC,IAAKrB,EAAKjB,GACVA,GAAIiB,EAAKjB,GACTM,MAAOW,EAAKX,YAItB,yBAAKR,UAAU,gBAAf,wE,GAxFUyC,IAAMC,Y,MCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASV,SAASC,eAAe,W","file":"static/js/main.8d4b5dba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./css/Header.css\";\r\n\r\n// By importing the Header.css file, it is added to the DOM whenever this component loads\r\n\r\nfunction Header(props) {\r\n  // console.log(props)\r\n  return (\r\n    <div className=\"score-bar\">\r\n      <div className=\"score\">Score: {props.score}</div>\r\n      <div id=\"win-lose\">Correct!</div>\r\n      <div className=\"high-score\">High Score: {props.highscore}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./css/Card.css\"\r\n\r\nconst Card = props => (\r\n    <div className=\"card\" onClick={() => { props.cardClick(props.id) }}>\r\n      <img className=\"card-image\" src={props.image} alt=\"tile\"/>\r\n    </div>\r\n);\r\n\r\nexport default Card;\r\n","import React from \"react\"\r\nimport Header from \"./components/Header\"\r\nimport Card from \"./components/Card\"\r\nimport cards from \"./components/cards.json\"\r\nimport \"./App.css\"\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    cards,\r\n    score: 0,\r\n    highscore: 0\r\n  };\r\n\r\n  gameOver = () => {\r\n    // if current score is greater than highscore, update high score\r\n    if (this.state.score > this.state.highscore) {\r\n      this.setState({ highscore: this.state.score }, function() {\r\n        console.log(\"New Highscore: \", this.state.highscore);\r\n      });\r\n    }\r\n    // reset card counter\r\n    this.state.cards.forEach(card => {\r\n      card.count = 0;\r\n    });\r\n    // replace with modal\r\n    this.state.score === cards.length ? alert(`You Win with a score of ${this.state.score}!`) : alert(`You lost. Your score was ${this.state.score}. Please try again.`)\r\n    // console.log(\"Game Over. Your score: \", this.state.score);\r\n    // reset state for score\r\n    this.setState({ score: 0 });\r\n    // shuffle cards for new game\r\n    this.shuffleCards(this.state.cards);\r\n    return true;\r\n  }\r\n\r\n  cardClick = id => {\r\n    // eslint-disable-next-line\r\n    this.state.cards.find((e, i) => {\r\n      // if the clicked element's id matches an id for a card\r\n      if (e.id === id) {\r\n        // if the clicked card's counter is zero\r\n        if (cards[i].count === 0) {\r\n          // set clicked card as counted\r\n          cards[i].count = cards[i].count + 1;\r\n          this.setState({ score: this.state.score + 1}, function() {\r\n            console.log(this.state.score)\r\n            this.correctText()\r\n            if (this.state.score === cards.length) {\r\n              // console.log(\"You win!\")\r\n              this.gameOver();\r\n            }\r\n          });\r\n          // shuffle cards after a guess\r\n          this.shuffleCards(this.state.cards);\r\n          return true;\r\n          // else, we've clicked it before, and it's a game over\r\n        } else {\r\n          this.gameOver();\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  // randomizer\r\n  shuffleCards = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  // tell the user they clicked correctly\r\n  correctText = () => {\r\n    const div = document.getElementById(\"win-lose\");\r\n    div.style.opacity = 1;\r\n    setTimeout(function() {\r\n      div.style.opacity = 0;\r\n    }, 750)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Header score={this.state.score} highscore={this.state.highscore}/>\r\n        <div className=\"card-container\">\r\n          {this.state.cards.map(card => (\r\n                <Card \r\n                  cardClick={this.cardClick}\r\n                  key={card.id}\r\n                  id={card.id}\r\n                  image={card.image}\r\n                />\r\n          ))}\r\n        </div>\r\n        <div className=\"instructions\">Click an image to begin. Try not to click the same image twice!</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}